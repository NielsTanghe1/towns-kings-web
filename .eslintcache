[{"/home/ewoudje/Projects/towns-kings-api/assets/src/index.js":"1","/home/ewoudje/Projects/towns-kings-api/assets/src/App.js":"2","/home/ewoudje/Projects/towns-kings-api/assets/src/reportWebVitals.js":"3","/home/ewoudje/Projects/towns-kings-api/assets/src/pages/ServerList.js":"4","/home/ewoudje/Projects/towns-kings-api/assets/src/pages/Nodes.js":"5","/home/ewoudje/Projects/towns-kings-api/assets/src/components/Navbar.js":"6","/home/ewoudje/Projects/towns-kings-api/assets/src/enviroment.js":"7","/home/ewoudje/Projects/towns-kings-api/assets/src/NodeConfig.js":"8","/home/ewoudje/Projects/towns-kings-api/assets/src/components/WorldDialog.js":"9","/home/ewoudje/Projects/towns-kings-api/assets/src/pages/__generated__/ServerListQuery.graphql.js":"10","/home/ewoudje/Projects/towns-kings-api/assets/src/components/__generated__/WorldDialogQuery.graphql.js":"11"},{"size":500,"mtime":1611397562011,"results":"12","hashOfConfig":"13"},{"size":1120,"mtime":1611397562010,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1611397562011,"results":"15","hashOfConfig":"13"},{"size":2442,"mtime":1611397562011,"results":"16","hashOfConfig":"13"},{"size":2114,"mtime":1611397562011,"results":"17","hashOfConfig":"13"},{"size":6294,"mtime":1611397562011,"results":"18","hashOfConfig":"13"},{"size":744,"mtime":1611403231365,"results":"19","hashOfConfig":"13"},{"size":629,"mtime":1611397562010,"results":"20","hashOfConfig":"13"},{"size":3264,"mtime":1611397562011,"results":"21","hashOfConfig":"13"},{"size":2311,"mtime":1611400265151,"results":"22","hashOfConfig":"13"},{"size":1740,"mtime":1611400265151,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1pkywvb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/ewoudje/Projects/towns-kings-api/assets/src/index.js",[],["53","54"],"/home/ewoudje/Projects/towns-kings-api/assets/src/App.js",["55","56","57"],"import React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport ServerList from \"./pages/ServerList\";\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {CircularProgress, Grid, IconButton, Toolbar} from \"@material-ui/core\";\nimport NodePage from \"./pages/Nodes\";\n\nfunction App() {\n\n    const [world, setWorld] = React.useState(\"wereld\");\n\n\n    return (\n    <div className=\"App\">\n        <Router>\n            <Grid container direction=\"column\" style={{height: \"100vh\"}}>\n                <Navbar onWorldSelect={(v) => setWorld(v)}/>\n\n                {!world ? <CircularProgress style={{marginTop: \"10%\" }} color=\"secondary\"/> :\n                    <Switch>\n                        <Route path=\"/dashboard\">\n                            <ServerList/>\n                        </Route>\n\n                        <Route path=\"/nodes\">\n                            <NodePage/>\n                        </Route>\n                    </Switch>\n                }\n            </Grid>\n\n\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ewoudje/Projects/towns-kings-api/assets/src/reportWebVitals.js",[],"/home/ewoudje/Projects/towns-kings-api/assets/src/pages/ServerList.js",["58"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {graphql, QueryRenderer} from 'react-relay';\nimport environment from \"../enviroment\";\n\n\nconst useStyles = makeStyles({\n    table: {\n        margin: \"auto\",\n        marginTop: 100,\n        width: \"50%\",\n    },\n});\n\nconst rows = [\n    { name: \"City1\", loc: [100, 50, 100]},\n    { name: \"City2\", loc: [999, 50, 100]},\n];\n\nfunction ServerList() {\n    const classes = useStyles();\n\n    return (\n    <QueryRenderer\n        environment={environment}\n        query={graphql`\n          query ServerListQuery($world: ID!) {\n            towns(world: $world) {\n              name\n            }\n          }\n        `}\n        variables={{world: \"cbb82595-6bab-4abe-bf0e-38c255bd2221\"}}\n        render={({error, props}) => {\n            if (error) {\n                return <div>Error!</div>;\n            }\n            if (!props) {\n                return <div>Loading...</div>;\n            }\n            console.info(props)\n\n            return (\n                <TableContainer className={classes.table} component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>City</TableCell>\n                            <TableCell align=\"right\">Members</TableCell>\n                            <TableCell align=\"right\">Age</TableCell>\n                            <TableCell align=\"right\">At war?</TableCell>\n\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {props.towns.map((row) => (\n                            <TableRow key={row.name}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            );\n        }}/>\n    );\n}\n\nexport default ServerList;\n\n","/home/ewoudje/Projects/towns-kings-api/assets/src/pages/Nodes.js",["59","60","61"],"import React from 'react'\nimport { NodeEditor } from \"flume\";\nimport config from \"../NodeConfig\";\nimport {\n    Container,\n    Divider,\n    Drawer,\n    Grid,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    Toolbar\n} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport {classes} from \"istanbul-lib-coverage\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction NodePage()\n{\n\n    const classes = useStyles();\n\n    return (\n        <Grid item className={classes.root} style={{flexGrow: 1}}>\n            <NodeEditor\n                portTypes={config.portTypes}\n                nodeTypes={config.nodeTypes}\n            />\n\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n                anchor=\"right\"\n            >\n\n                <Toolbar />\n                <div className={classes.drawerContainer}>\n                    <List>\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                            <ListItem button key={text}>\n\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    <Divider />\n                    <List>\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                            <ListItem button key={text}>\n\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </Drawer>\n\n        </Grid>\n\n    )\n}\n\nexport default NodePage;","/home/ewoudje/Projects/towns-kings-api/assets/src/components/Navbar.js",["62","63","64","65","66"],"import React from 'react';\nimport {\n    AppBar,\n    Button, CircularProgress, CssBaseline, Divider,\n    Drawer, Grid,\n    IconButton,\n    List, ListItem, ListItemIcon, ListItemText,\n    makeStyles,\n    Menu,\n    MenuItem,\n    Toolbar,\n    Typography, useTheme\n} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport clsx from \"clsx\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport {Link} from 'react-router-dom';\nimport WorldIcon from '@material-ui/icons/Public';\nimport Dialog from '@material-ui/core/Dialog';\nimport WorldDialog from \"./WorldDialog\";\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        overflow: \"hidden\",\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        color: theme.palette.primary,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nfunction Navbar(props) {\n\n    const { onWorldSelect } = props;\n\n\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [openDrawer, setOpenDrawer] = React.useState(false);\n    const [openWorld, setOpenWorld] = React.useState(false);\n    const [worldLoading, setWorldLoading] = React.useState(true);\n\n    const worldLoad = (def) => {\n        setWorldLoading(false);\n        onWorldSelect(def);\n    }\n\n    const worldClick = () => setOpenWorld(true);\n\n    const worldClose = () => setOpenWorld(false);\n\n    const handleDrawerOpen = () => setOpenDrawer(true);\n\n    const handleDrawerClose = () => setOpenDrawer(false);\n\n    return (\n        <Grid item className={classes.root}>\n            <CssBaseline/>\n            <AppBar\n                position=\"static\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: openDrawer,\n                })}\n            >\n                <Toolbar style={{height: \"auto\"}}>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, openDrawer && classes.hide)}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Towns and Kings\n                    </Typography>\n\n                    <div\n                        style={{flexGrow: 1}}\n                    />\n\n                    {worldLoading ? <CircularProgress className={classes.menuButton} color=\"secondary\"/> :\n                        <IconButton\n                            color=\"inherit\"\n                            aria-haspopup=\"true\"\n                            onClick={worldClick}\n                            edge=\"start\"\n                            className={classes.menuButton}\n                        >\n                            <WorldIcon/>\n                        </IconButton>\n                    }\n\n                    <WorldDialog onLoad={worldLoad} selectedValue={\"user02@gmail.com\"} open={openWorld} onClose={worldClose} onSelect={onWorldSelect} />\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={openDrawer}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <Typography variant=\"h5\" style={{flexGrow: 1, textAlign: \"left\", padding: theme.spacing(0, 1)}}> My City </Typography>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon/> : <ChevronRightIcon/>}\n                    </IconButton>\n                </div>\n                <Divider/>\n                <List>\n                    {\n                        [\n                            {text: 'Overview', url: '/dashboard'},\n                            {text: 'Nodes', url: '/nodes'},\n                            {text: 'Economics', url: '/economics'},\n                            {text: 'Laws', url: '/laws'},\n\n                        ].map((item, index) => (\n                            <ListItem button key={item.text} component={Link} to={item.url}>\n                                <ListItemText primary={item.text}/>\n                            </ListItem>\n                        ))}\n                </List>\n                <Divider/>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: openDrawer,\n                })}\n            >\n            </main>\n        </Grid>\n    );\n}\n\nexport default Navbar;\n","/home/ewoudje/Projects/towns-kings-api/assets/src/enviroment.js",[],"/home/ewoudje/Projects/towns-kings-api/assets/src/NodeConfig.js",[],"/home/ewoudje/Projects/towns-kings-api/assets/src/components/WorldDialog.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport WorldIcon from \"@material-ui/icons/Public\";\nimport {ListItemIcon} from \"@material-ui/core\";\nimport environment from \"../enviroment\";\nimport {graphql, QueryRenderer} from \"react-relay\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n});\n\nfunction WorldDialog(props) {\n    const classes = useStyles();\n    const { onLoad, onClose, selectedValue, open, onSelect } = props;\n\n    const handleClose = () => {\n        onClose(selectedValue);\n    };\n\n    const handleListItemClick = (value) => {\n        onSelect(value);\n        onClose(value);\n    };\n\n    return (\n        <QueryRenderer\n            environment={environment}\n            query={graphql`\n              query WorldDialogQuery {\n                worlds {\n                    id,\n                    name\n                }\n              }\n            `}\n            variables={{}}\n            render={({error, props}) => {\n                if (error) {\n                    return <div>Error!</div>;\n                }\n\n                if (props) {\n\n                    onLoad(props.worlds.filter((w) => w.default)[0]);\n\n                    return (\n                        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n                            <DialogTitle style={{textAlign: \"center\"}} id=\"simple-dialog-title\">Select world</DialogTitle>\n                            <List>\n                                {props.worlds.map((world) => (\n                                    <ListItem button onClick={() => handleListItemClick(world)} key={world.name}>\n                                        <ListItemIcon>\n                                            <WorldIcon/>\n                                        </ListItemIcon>\n                                        <ListItemText primary={world.name} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </Dialog>\n                    );\n                }\n        }}/>\n    );\n}\n\nexport default WorldDialog;","/home/ewoudje/Projects/towns-kings-api/assets/src/pages/__generated__/ServerListQuery.graphql.js",[],"/home/ewoudje/Projects/towns-kings-api/assets/src/components/__generated__/WorldDialogQuery.graphql.js",[],["83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":12},{"ruleId":"89","severity":1,"message":"93","line":8,"column":33,"nodeType":"91","messageId":"92","endLine":8,"endColumn":43},{"ruleId":"89","severity":1,"message":"94","line":8,"column":45,"nodeType":"91","messageId":"92","endLine":8,"endColumn":52},{"ruleId":"89","severity":1,"message":"95","line":22,"column":7,"nodeType":"91","messageId":"92","endLine":22,"endColumn":11},{"ruleId":"89","severity":1,"message":"96","line":5,"column":5,"nodeType":"91","messageId":"92","endLine":5,"endColumn":14},{"ruleId":"89","severity":1,"message":"97","line":10,"column":5,"nodeType":"91","messageId":"92","endLine":10,"endColumn":17},{"ruleId":"89","severity":1,"message":"98","line":16,"column":9,"nodeType":"91","messageId":"92","endLine":16,"endColumn":16},{"ruleId":"89","severity":1,"message":"99","line":4,"column":5,"nodeType":"91","messageId":"92","endLine":4,"endColumn":11},{"ruleId":"89","severity":1,"message":"97","line":7,"column":21,"nodeType":"91","messageId":"92","endLine":7,"endColumn":33},{"ruleId":"89","severity":1,"message":"100","line":9,"column":5,"nodeType":"91","messageId":"92","endLine":9,"endColumn":9},{"ruleId":"89","severity":1,"message":"101","line":10,"column":5,"nodeType":"91","messageId":"92","endLine":10,"endColumn":13},{"ruleId":"89","severity":1,"message":"102","line":20,"column":8,"nodeType":"91","messageId":"92","endLine":20,"endColumn":14},{"ruleId":"89","severity":1,"message":"103","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":17},{"ruleId":"89","severity":1,"message":"99","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":14},{"ruleId":"89","severity":1,"message":"104","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":14},{"ruleId":"89","severity":1,"message":"105","line":8,"column":8,"nodeType":"91","messageId":"92","endLine":8,"endColumn":22},{"ruleId":"89","severity":1,"message":"106","line":12,"column":8,"nodeType":"91","messageId":"92","endLine":12,"endColumn":18},{"ruleId":"89","severity":1,"message":"107","line":13,"column":8,"nodeType":"91","messageId":"92","endLine":13,"endColumn":15},{"ruleId":"89","severity":1,"message":"108","line":14,"column":8,"nodeType":"91","messageId":"92","endLine":14,"endColumn":18},{"ruleId":"89","severity":1,"message":"109","line":20,"column":8,"nodeType":"91","messageId":"92","endLine":20,"endColumn":22},{"ruleId":"89","severity":1,"message":"110","line":21,"column":8,"nodeType":"91","messageId":"92","endLine":21,"endColumn":13},{"ruleId":"89","severity":1,"message":"111","line":22,"column":8,"nodeType":"91","messageId":"92","endLine":22,"endColumn":13},{"ruleId":"89","severity":1,"message":"112","line":23,"column":8,"nodeType":"91","messageId":"92","endLine":23,"endColumn":17},{"ruleId":"89","severity":1,"message":"113","line":24,"column":8,"nodeType":"91","messageId":"92","endLine":24,"endColumn":16},{"ruleId":"89","severity":1,"message":"114","line":25,"column":8,"nodeType":"91","messageId":"92","endLine":25,"endColumn":17},{"ruleId":"89","severity":1,"message":"115","line":26,"column":8,"nodeType":"91","messageId":"92","endLine":26,"endColumn":17},{"ruleId":"89","severity":1,"message":"116","line":28,"column":7,"nodeType":"91","messageId":"92","endLine":28,"endColumn":13},{"ruleId":"89","severity":1,"message":"117","line":37,"column":11,"nodeType":"91","messageId":"92","endLine":37,"endColumn":18},{"ruleId":"85","replacedBy":"118"},{"ruleId":"87","replacedBy":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Toolbar' is defined but never used.","'rows' is assigned a value but never used.","'Container' is defined but never used.","'ListItemIcon' is defined but never used.","'classes' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Dialog' is defined but never used.","'PropTypes' is defined but never used.","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'PersonIcon' is defined but never used.","'AddIcon' is defined but never used.","'Typography' is defined but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'TableCell' is defined but never used.","'TableBody' is defined but never used.","'emails' is assigned a value but never used.","'classes' is assigned a value but never used.",["120"],["121"],"no-global-assign","no-unsafe-negation"]